// Do not mofify by hand. This file is auto-generated by Arow generator
// Generated on 2/26/2017 9:07:00 PM by Anton at SEXTOD
// Framework: [35337736] by Anton@SEXTOD:Win32NT on 2/27/2017 2:06:43 AM UTC

using System;
using System.Collections.Generic;
using NFX;
using NFX.IO;
using NFX.DataAccess.CRUD;
using NFX.Serialization.Arow;
using AW = NFX.Serialization.Arow.Writer;

namespace NFX.NUnit.Serialization.Arow
{
  ///<summary>
  /// ITypeSerializationCore for NFX.NUnit.Serialization.SimplePersonRow
  ///</summary>
  internal class SimplePersonRow_arow_core : NFX.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(NFX.NUnit.Serialization.SimplePersonRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedRow aRow, WritingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.SimplePersonRow)aRow;
      // 'id' = 26980
      AW.Write(streamer, 26980, row.ID);
      // 'name' = 1851878757
      if (row.Name != null)
      AW.Write(streamer, 1851878757, row.Name);
      else AW.WriteNull(streamer, 1851878757);
      // 'age' = 6383461
      AW.Write(streamer, 6383461, row.Age);
      // 'b1' = 25137
      AW.Write(streamer, 25137, row.Bool1);
      // 's1' = 29489
      if (row.Str1 != null)
      AW.Write(streamer, 29489, row.Str1);
      else AW.WriteNull(streamer, 29489);
      // 's2' = 29490
      if (row.Str2 != null)
      AW.Write(streamer, 29490, row.Str2);
      else AW.WriteNull(streamer, 29490);
      // 'd1' = 25649
      AW.Write(streamer, 25649, row.Date);
      // 'slr' = 7564402
      AW.Write(streamer, 7564402, row.Salary);
    }

    void ITypeSerializationCore.Deserialize(TypedRow aRow, ReadingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.SimplePersonRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 26980: { // 'id'
           if (dt==DataType.GDID) row.ID = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 1851878757: { // 'name'
           if (dt==DataType.String) row.Name = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 6383461: { // 'age'
           if (dt==DataType.Int32) row.Age = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 25137: { // 'b1'
           if (dt==DataType.Boolean) row.Bool1 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 29489: { // 's1'
           if (dt==DataType.String) row.Str1 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 29490: { // 's2'
           if (dt==DataType.String) row.Str2 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 25649: { // 'd1'
           if (dt==DataType.DateTime) row.Date = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 7564402: { // 'slr'
           if (dt==DataType.Double) row.Salary = Reader.ReadDouble(streamer);
           else break;
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for NFX.NUnit.Serialization.FamilyRow
  ///</summary>
  internal class FamilyRow_arow_core : NFX.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(NFX.NUnit.Serialization.FamilyRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedRow aRow, WritingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.FamilyRow)aRow;
      // 'id' = 26980
      AW.Write(streamer, 26980, row.ID);
      // 'fam' = 6709613
      if (row.Name != null)
      AW.Write(streamer, 6709613, row.Name);
      else AW.WriteNull(streamer, 6709613);
      // 'reg' = 7497063
      AW.Write(streamer, 7497063, row.RegisteredToVote);
      // 'fat' = 6709620
      if (row.Father != null)
      Writer.WriteRow(streamer, 6709620, row.Father);
      else AW.WriteNull(streamer, 6709620);
      // 'mot' = 7171956
      if (row.Mother != null)
      Writer.WriteRow(streamer, 7171956, row.Mother);
      else AW.WriteNull(streamer, 7171956);
      // 'bro' = 6451823
      if (row.Brothers != null)
      Writer.WriteRowArray(streamer, 6451823, row.Brothers);
      else AW.WriteNull(streamer, 6451823);
      // 'sis' = 7563635
      if (row.Sisters != null)
      Writer.WriteRowArray(streamer, 7563635, row.Sisters);
      else AW.WriteNull(streamer, 7563635);
      // 'adv' = 6382710
      if (row.Advisers != null)
      Writer.WriteRowArray(streamer, 6382710, row.Advisers);
      else AW.WriteNull(streamer, 6382710);
    }

    void ITypeSerializationCore.Deserialize(TypedRow aRow, ReadingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.FamilyRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 26980: { // 'id'
           if (dt==DataType.GDID) row.ID = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 6709613: { // 'fam'
           if (dt==DataType.String) row.Name = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 7497063: { // 'reg'
           if (dt==DataType.Boolean) row.RegisteredToVote = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 6709620: { // 'fat'
           if (dt==DataType.Null) { row.Father = null; continue;}
           if (dt!=DataType.Row) break;
           var vrow = new NFX.NUnit.Serialization.SimplePersonRow();
           if (Reader.TryReadRow(row, vrow, streamer, CodeGenerator.GetName(name)))
             row.Father = vrow;
           continue;
                     }
           case 7171956: { // 'mot'
           if (dt==DataType.Null) { row.Mother = null; continue;}
           if (dt!=DataType.Row) break;
           var vrow = new NFX.NUnit.Serialization.SimplePersonRow();
           if (Reader.TryReadRow(row, vrow, streamer, CodeGenerator.GetName(name)))
             row.Mother = vrow;
           continue;
                     }
           case 6451823: { // 'bro'
           if (dt==DataType.Null) { row.Brothers = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Row) break;
           row.Brothers = Reader.ReadRowArray<NFX.NUnit.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
           case 7563635: { // 'sis'
           if (dt==DataType.Null) { row.Sisters = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Row) break;
           row.Sisters = Reader.ReadRowArray<NFX.NUnit.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
           case 6382710: { // 'adv'
           if (dt==DataType.Null) { row.Advisers = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Row) break;
           row.Advisers = Reader.ReadRowList<NFX.NUnit.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for NFX.NUnit.Serialization.AllArowTypesRow
  ///</summary>
  internal class AllArowTypesRow_arow_core : NFX.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(NFX.NUnit.Serialization.AllArowTypesRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedRow aRow, WritingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.AllArowTypesRow)aRow;
      // 'bool1' = 422776368177
      AW.Write(streamer, 422776368177, row.Bool1);
      // 'bool2' = 422776368178
      if (row.Bool2.HasValue)
      AW.Write(streamer, 422776368178, row.Bool2.Value);
      else AW.WriteNull(streamer, 422776368178);
      // 'bool3' = 422776368179
      if (row.Bool3 != null)
      AW.Write(streamer, 422776368179, row.Bool3);
      else AW.WriteNull(streamer, 422776368179);
      // 'bool4' = 422776368180
      if (row.Bool4 != null)
      AW.Write(streamer, 422776368180, row.Bool4);
      else AW.WriteNull(streamer, 422776368180);
      // 'gdid1' = 444066260017
      AW.Write(streamer, 444066260017, row.GDID1);
      // 'gdid2' = 444066260018
      if (row.GDID2.HasValue)
      AW.Write(streamer, 444066260018, row.GDID2.Value);
      else AW.WriteNull(streamer, 444066260018);
      // 'gdid3' = 444066260019
      if (row.GDID3 != null)
      AW.Write(streamer, 444066260019, row.GDID3);
      else AW.WriteNull(streamer, 444066260019);
      // 'gdid4' = 444066260020
      if (row.GDID4 != null)
      AW.Write(streamer, 444066260020, row.GDID4);
      else AW.WriteNull(streamer, 444066260020);
      // 'guid1' = 444351472689
      AW.Write(streamer, 444351472689, row.Guid1);
      // 'guid2' = 444351472690
      if (row.Guid2.HasValue)
      AW.Write(streamer, 444351472690, row.Guid2.Value);
      else AW.WriteNull(streamer, 444351472690);
      // 'guid3' = 444351472691
      if (row.Guid3 != null)
      AW.Write(streamer, 444351472691, row.Guid3);
      else AW.WriteNull(streamer, 444351472691);
      // 'guid4' = 444351472692
      if (row.Guid4 != null)
      AW.Write(streamer, 444351472692, row.Guid4);
      else AW.WriteNull(streamer, 444351472692);
      // 'fid1' = 1718182961
      AW.Write(streamer, 1718182961, row.Fid1);
      // 'fid2' = 1718182962
      if (row.Fid2.HasValue)
      AW.Write(streamer, 1718182962, row.Fid2.Value);
      else AW.WriteNull(streamer, 1718182962);
      // 'fid3' = 1718182963
      if (row.Fid3 != null)
      AW.Write(streamer, 1718182963, row.Fid3);
      else AW.WriteNull(streamer, 1718182963);
      // 'fid4' = 1718182964
      if (row.Fid4 != null)
      AW.Write(streamer, 1718182964, row.Fid4);
      else AW.WriteNull(streamer, 1718182964);
      // 'dt1' = 6583345
      AW.Write(streamer, 6583345, row.Dt1);
      // 'dt2' = 6583346
      if (row.Dt2.HasValue)
      AW.Write(streamer, 6583346, row.Dt2.Value);
      else AW.WriteNull(streamer, 6583346);
      // 'dt3' = 6583347
      if (row.Dt3 != null)
      AW.Write(streamer, 6583347, row.Dt3);
      else AW.WriteNull(streamer, 6583347);
      // 'dt4' = 6583348
      if (row.Dt4 != null)
      AW.Write(streamer, 6583348, row.Dt4);
      else AW.WriteNull(streamer, 6583348);
      // 'ts1' = 7631665
      AW.Write(streamer, 7631665, row.Ts1);
      // 'ts2' = 7631666
      if (row.Ts2.HasValue)
      AW.Write(streamer, 7631666, row.Ts2.Value);
      else AW.WriteNull(streamer, 7631666);
      // 'ts3' = 7631667
      if (row.Ts3 != null)
      AW.Write(streamer, 7631667, row.Ts3);
      else AW.WriteNull(streamer, 7631667);
      // 'ts4' = 7631668
      if (row.Ts4 != null)
      AW.Write(streamer, 7631668, row.Ts4);
      else AW.WriteNull(streamer, 7631668);
      // 'int1' = 1768846385
      AW.Write(streamer, 1768846385, row.int1);
      // 'int2' = 1768846386
      if (row.int2.HasValue)
      AW.Write(streamer, 1768846386, row.int2.Value);
      else AW.WriteNull(streamer, 1768846386);
      // 'int3' = 1768846387
      if (row.int3 != null)
      AW.Write(streamer, 1768846387, row.int3);
      else AW.WriteNull(streamer, 1768846387);
      // 'int4' = 1768846388
      if (row.int4 != null)
      AW.Write(streamer, 1768846388, row.int4);
      else AW.WriteNull(streamer, 1768846388);
      // 'uint1' = 504280020017
      AW.Write(streamer, 504280020017, row.uint1);
      // 'uint2' = 504280020018
      if (row.uint2.HasValue)
      AW.Write(streamer, 504280020018, row.uint2.Value);
      else AW.WriteNull(streamer, 504280020018);
      // 'uint3' = 504280020019
      if (row.uint3 != null)
      AW.Write(streamer, 504280020019, row.uint3);
      else AW.WriteNull(streamer, 504280020019);
      // 'uint4' = 504280020020
      if (row.uint4 != null)
      AW.Write(streamer, 504280020020, row.uint4);
      else AW.WriteNull(streamer, 504280020020);
    }

    void ITypeSerializationCore.Deserialize(TypedRow aRow, ReadingStreamer streamer)
    {
      var row = (NFX.NUnit.Serialization.AllArowTypesRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 422776368177: { // 'bool1'
           if (dt==DataType.Boolean) row.Bool1 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 422776368178: { // 'bool2'
           if (dt==DataType.Null) row.Bool2 = null;
           else if (dt==DataType.Boolean) row.Bool2 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 422776368179: { // 'bool3'
           if (dt==DataType.Null) row.Bool3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Boolean) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Boolean[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadBoolean(streamer);
              row.Bool3 = arr;
           }
           continue;
                     }
           case 422776368180: { // 'bool4'
           if (dt==DataType.Null) row.Bool4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Boolean) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Boolean>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadBoolean(streamer) );
              row.Bool4 = lst;
           }
           continue;
                     }
           case 444066260017: { // 'gdid1'
           if (dt==DataType.GDID) row.GDID1 = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 444066260018: { // 'gdid2'
           if (dt==DataType.Null) row.GDID2 = null;
           else if (dt==DataType.GDID) row.GDID2 = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 444066260019: { // 'gdid3'
           if (dt==DataType.Null) row.GDID3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.GDID) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new NFX.DataAccess.Distributed.GDID[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadGDID(streamer);
              row.GDID3 = arr;
           }
           continue;
                     }
           case 444066260020: { // 'gdid4'
           if (dt==DataType.Null) row.GDID4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.GDID) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<NFX.DataAccess.Distributed.GDID>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadGDID(streamer) );
              row.GDID4 = lst;
           }
           continue;
                     }
           case 444351472689: { // 'guid1'
           if (dt==DataType.Guid) row.Guid1 = Reader.ReadGuid(streamer);
           else break;
           continue;
                     }
           case 444351472690: { // 'guid2'
           if (dt==DataType.Null) row.Guid2 = null;
           else if (dt==DataType.Guid) row.Guid2 = Reader.ReadGuid(streamer);
           else break;
           continue;
                     }
           case 444351472691: { // 'guid3'
           if (dt==DataType.Null) row.Guid3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Guid) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Guid[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadGuid(streamer);
              row.Guid3 = arr;
           }
           continue;
                     }
           case 444351472692: { // 'guid4'
           if (dt==DataType.Null) row.Guid4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Guid) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Guid>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadGuid(streamer) );
              row.Guid4 = lst;
           }
           continue;
                     }
           case 1718182961: { // 'fid1'
           if (dt==DataType.FID) row.Fid1 = Reader.ReadFID(streamer);
           else break;
           continue;
                     }
           case 1718182962: { // 'fid2'
           if (dt==DataType.Null) row.Fid2 = null;
           else if (dt==DataType.FID) row.Fid2 = Reader.ReadFID(streamer);
           else break;
           continue;
                     }
           case 1718182963: { // 'fid3'
           if (dt==DataType.Null) row.Fid3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.FID) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new NFX.FID[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadFID(streamer);
              row.Fid3 = arr;
           }
           continue;
                     }
           case 1718182964: { // 'fid4'
           if (dt==DataType.Null) row.Fid4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.FID) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<NFX.FID>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadFID(streamer) );
              row.Fid4 = lst;
           }
           continue;
                     }
           case 6583345: { // 'dt1'
           if (dt==DataType.DateTime) row.Dt1 = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 6583346: { // 'dt2'
           if (dt==DataType.Null) row.Dt2 = null;
           else if (dt==DataType.DateTime) row.Dt2 = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 6583347: { // 'dt3'
           if (dt==DataType.Null) row.Dt3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.DateTime) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.DateTime[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadDateTime(streamer);
              row.Dt3 = arr;
           }
           continue;
                     }
           case 6583348: { // 'dt4'
           if (dt==DataType.Null) row.Dt4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.DateTime) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.DateTime>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadDateTime(streamer) );
              row.Dt4 = lst;
           }
           continue;
                     }
           case 7631665: { // 'ts1'
           if (dt==DataType.TimeSpan) row.Ts1 = Reader.ReadTimeSpan(streamer);
           else break;
           continue;
                     }
           case 7631666: { // 'ts2'
           if (dt==DataType.Null) row.Ts2 = null;
           else if (dt==DataType.TimeSpan) row.Ts2 = Reader.ReadTimeSpan(streamer);
           else break;
           continue;
                     }
           case 7631667: { // 'ts3'
           if (dt==DataType.Null) row.Ts3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.TimeSpan) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.TimeSpan[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadTimeSpan(streamer);
              row.Ts3 = arr;
           }
           continue;
                     }
           case 7631668: { // 'ts4'
           if (dt==DataType.Null) row.Ts4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.TimeSpan) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.TimeSpan>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadTimeSpan(streamer) );
              row.Ts4 = lst;
           }
           continue;
                     }
           case 1768846385: { // 'int1'
           if (dt==DataType.Int32) row.int1 = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 1768846386: { // 'int2'
           if (dt==DataType.Null) row.int2 = null;
           else if (dt==DataType.Int32) row.int2 = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 1768846387: { // 'int3'
           if (dt==DataType.Null) row.int3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int32) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Int32[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadInt32(streamer);
              row.int3 = arr;
           }
           continue;
                     }
           case 1768846388: { // 'int4'
           if (dt==DataType.Null) row.int4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int32) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Int32>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadInt32(streamer) );
              row.int4 = lst;
           }
           continue;
                     }
           case 504280020017: { // 'uint1'
           if (dt==DataType.UInt32) row.uint1 = Reader.ReadUInt32(streamer);
           else break;
           continue;
                     }
           case 504280020018: { // 'uint2'
           if (dt==DataType.Null) row.uint2 = null;
           else if (dt==DataType.UInt32) row.uint2 = Reader.ReadUInt32(streamer);
           else break;
           continue;
                     }
           case 504280020019: { // 'uint3'
           if (dt==DataType.Null) row.uint3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt32) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.UInt32[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadUInt32(streamer);
              row.uint3 = arr;
           }
           continue;
                     }
           case 504280020020: { // 'uint4'
           if (dt==DataType.Null) row.uint4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt32) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.UInt32>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadUInt32(streamer) );
              row.uint4 = lst;
           }
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

}//namespace


//EOF
